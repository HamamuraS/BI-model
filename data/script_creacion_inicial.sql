USE [GD1C2024]
GO

-- Inicio Configurar reglas de nombre de objetos
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET CONCAT_NULL_YIELDS_NULL ON
GO
-- Fin Configurar reglas de nombre de objetos

-- Inicio DROP FKs

IF OBJECT_ID('GESTIONANDING.FK_CLIENTE_DIRECCION', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.CLIENTE
    DROP CONSTRAINT FK_CLIENTE_DIRECCION
GO

IF OBJECT_ID('GESTIONANDING.FK_ENVIO_TICKET', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.ENVIO
    DROP CONSTRAINT FK_ENVIO_TICKET
GO

IF OBJECT_ID('GESTIONANDING.FK_ENVIO_CLIENTE', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.ENVIO
    DROP CONSTRAINT FK_ENVIO_CLIENTE
GO

IF OBJECT_ID('GESTIONANDING.FK_DETPAG_CLIENTE', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.DETALLE_PAGO
    DROP CONSTRAINT FK_DETPAG_CLIENTE
GO

IF OBJECT_ID('GESTIONANDING.FK_DETPAG_TARJETA', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.DETALLE_PAGO
    DROP CONSTRAINT FK_DETPAG_TARJETA
GO

IF OBJECT_ID('GESTIONANDING.FK_PAGO_MP', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PAGO
    DROP CONSTRAINT FK_PAGO_MP
GO

IF OBJECT_ID('GESTIONANDING.FK_PAGO_TICKET', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PAGO
    DROP CONSTRAINT FK_PAGO_TICKET
GO

IF OBJECT_ID('GESTIONANDING.FK_PAGO_DETALLE', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PAGO
    DROP CONSTRAINT FK_PAGO_DETALLE
GO

IF OBJECT_ID('GESTIONANDING.FK_DA_PAGO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.DESCUENTO_APLICADO
    DROP CONSTRAINT FK_DA_PAGO
GO

IF OBJECT_ID('GESTIONANDING.FK_DA_DESCUENTO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.DESCUENTO_APLICADO
    DROP CONSTRAINT FK_DA_DESCUENTO
GO

IF OBJECT_ID('GESTIONANDING.FK_DESCUENTO_MP', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.DESCUENTO
    DROP CONSTRAINT FK_DESCUENTO_MP
GO

IF OBJECT_ID('GESTIONANDING.FK_MP_TIPOMP', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.MEDIO_PAGO
    DROP CONSTRAINT FK_MP_TIPOMP
GO

IF OBJECT_ID('GESTIONANDING.FK_TICKET_CAJA_NUMERO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.TICKET
    DROP CONSTRAINT FK_TICKET_CAJA_NUMERO
GO

IF OBJECT_ID('GESTIONANDING.FK_TICKET_SUCURSAL', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.TICKET
    DROP CONSTRAINT FK_TICKET_SUCURSAL
GO

IF OBJECT_ID('GESTIONANDING.FK_TICKET_EMPLEADO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.TICKET
    DROP CONSTRAINT FK_TICKET_EMPLEADO
GO

IF OBJECT_ID('GESTIONANDING.FK_TDET_PRODUCTO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.TICKET_DET
    DROP CONSTRAINT FK_TDET_PRODUCTO
GO

IF OBJECT_ID('GESTIONANDING.FK_TDET_TICKET', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.TICKET_DET
    DROP CONSTRAINT FK_TDET_TICKET
GO

IF OBJECT_ID('GESTIONANDING.FK_PA_PROMOCION', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PROMOCION_APLICADA
    DROP CONSTRAINT FK_PA_PROMOCION
GO

IF OBJECT_ID('GESTIONANDING.FK_PA_TDET', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PROMOCION_APLICADA
    DROP CONSTRAINT FK_PA_TDET
GO

IF OBJECT_ID('GESTIONANDING.FK_REGLA_PROMOCION', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.REGLA
    DROP CONSTRAINT FK_REGLA_PROMOCION
GO

IF OBJECT_ID('GESTIONANDING.FK_PXP_PROMOCION', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PROMOCION_POR_PRODUCTO
    DROP CONSTRAINT FK_PXP_PROMOCION
GO

IF OBJECT_ID('GESTIONANDING.FK_PXP_PRODUCTO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PROMOCION_POR_PRODUCTO
    DROP CONSTRAINT FK_PXP_PRODUCTO
GO

IF OBJECT_ID('GESTIONANDING.FK_PXS_PRODUCTO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PRODUCTO_POR_SUBCATEGORIA
    DROP CONSTRAINT FK_PXS_PRODUCTO
GO

IF OBJECT_ID('GESTIONANDING.FK_PXS_SUBCATEGORIA', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PRODUCTO_POR_SUBCATEGORIA
    DROP CONSTRAINT FK_PXS_SUBCATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.FK_CXS_SUBCATEGORIA', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.CATEGORIA_POR_SUBCATEGORIA
    DROP CONSTRAINT FK_CXS_SUBCATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.FK_CXS_CATEGORIA', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.CATEGORIA_POR_SUBCATEGORIA
    DROP CONSTRAINT FK_CXS_CATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.FK_PXM_MARCA', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PRODUCTO_POR_MARCA
    DROP CONSTRAINT FK_PXM_MARCA
GO

IF OBJECT_ID('GESTIONANDING.FK_PXM_PRODUCTO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.PRODUCTO_POR_MARCA
    DROP CONSTRAINT FK_PXM_PRODUCTO
GO

IF OBJECT_ID('GESTIONANDING.FK_CAJA_CAJATIPO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.CAJA
    DROP CONSTRAINT FK_CAJA_CAJATIPO 
GO

IF OBJECT_ID('GESTIONANDING.FK_CAJA_SUCURSAL', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.CAJA
    DROP CONSTRAINT FK_CAJA_SUCURSAL 
GO

IF OBJECT_ID('GESTIONANDING.FK_SUCURSAL_DIRECCION', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.SUCURSAL
    DROP CONSTRAINT FK_SUCURSAL_DIRECCION 
GO

IF OBJECT_ID('GESTIONANDING.FK_SUCURSAL_SUPERMERCADO', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.SUCURSAL
    DROP CONSTRAINT FK_SUCURSAL_SUPERMERCADO 
GO

IF OBJECT_ID('GESTIONANDING.FK_SUPERMERCADO_DIRECCION', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.SUPERMERCADO
    DROP CONSTRAINT FK_SUPERMERCADO_DIRECCION 
GO

IF OBJECT_ID('GESTIONANDING.FK_SUPERMERCADO_CFISCAL', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.SUPERMERCADO
    DROP CONSTRAINT FK_SUPERMERCADO_CFISCAL 
GO

IF OBJECT_ID('GESTIONANDING.FK_DIRECCION', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.DIRECCION
    DROP CONSTRAINT FK_DIRECCION 
GO

IF OBJECT_ID('GESTIONANDING.FK_LOCALIDAD_PROVINCIA', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.LOCALIDAD
    DROP CONSTRAINT FK_LOCALIDAD_PROVINCIA 
GO

IF OBJECT_ID('GESTIONANDING.FK_EMPLEADO_SUCURSAL', 'F') IS NOT NULL
ALTER TABLE GESTIONANDING.EMPLEADO
    DROP CONSTRAINT FK_EMPLEADO_SUCURSAL
GO

-- Fin DROP FKs


-- Inicio DROP Tablas

IF OBJECT_ID('GESTIONANDING.CLIENTE', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.CLIENTE
GO

IF OBJECT_ID('GESTIONANDING.ENVIO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.ENVIO
GO

IF OBJECT_ID('GESTIONANDING.TARJETA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.TARJETA
GO

IF OBJECT_ID('GESTIONANDING.DETALLE_PAGO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.DETALLE_PAGO
GO

IF OBJECT_ID('GESTIONANDING.PAGO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.PAGO
GO

IF OBJECT_ID('GESTIONANDING.DESCUENTO_APLICADO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.DESCUENTO_APLICADO
GO

IF OBJECT_ID('GESTIONANDING.DESCUENTO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.DESCUENTO
GO

IF OBJECT_ID('GESTIONANDING.MEDIO_PAGO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.MEDIO_PAGO
GO

IF OBJECT_ID('GESTIONANDING.TIPO_MP', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.TIPO_MP
GO

IF OBJECT_ID('GESTIONANDING.TICKET', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.TICKET
GO

IF OBJECT_ID('GESTIONANDING.TICKET_DET', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.TICKET_DET
GO

IF OBJECT_ID('GESTIONANDING.PROMOCION_APLICADA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.PROMOCION_APLICADA
GO

IF OBJECT_ID('GESTIONANDING.PROMOCION', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.PROMOCION
GO

IF OBJECT_ID('GESTIONANDING.REGLA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.REGLA
GO

IF OBJECT_ID('GESTIONANDING.PROMOCION_POR_PRODUCTO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.PROMOCION_POR_PRODUCTO
GO

IF OBJECT_ID('GESTIONANDING.PRODUCTO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.PRODUCTO
GO

IF OBJECT_ID('GESTIONANDING.PRODUCTO_POR_SUBCATEGORIA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.PRODUCTO_POR_SUBCATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.SUBCATEGORIA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.SUBCATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.CATEGORIA_POR_SUBCATEGORIA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.CATEGORIA_POR_SUBCATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.CATEGORIA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.CATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.PRODUCTO_POR_MARCA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.PRODUCTO_POR_MARCA
GO

IF OBJECT_ID('GESTIONANDING.MARCA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.MARCA
GO

IF OBJECT_ID('GESTIONANDING.CAJA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.CAJA
GO

IF OBJECT_ID('GESTIONANDING.CAJA_TIPO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.CAJA_TIPO
GO

IF OBJECT_ID('GESTIONANDING.SUCURSAL', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.SUCURSAL
GO

IF OBJECT_ID('GESTIONANDING.SUPERMERCADO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.SUPERMERCADO
GO

IF OBJECT_ID('GESTIONANDING.CONDICION_FISCAL', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.CONDICION_FISCAL
GO

IF OBJECT_ID('GESTIONANDING.DIRECCION', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.DIRECCION
GO

IF OBJECT_ID('GESTIONANDING.LOCALIDAD', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.LOCALIDAD
GO

IF OBJECT_ID('GESTIONANDING.PROVINCIA', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.PROVINCIA
GO

IF OBJECT_ID('GESTIONANDING.EMPLEADO', 'U') IS NOT NULL
    DROP TABLE GESTIONANDING.EMPLEADO
GO

-- Fin DROP Tablas


-- Inicio DROP Procedimientos
IF OBJECT_ID('GESTIONANDING.MIGRAR_CLIENTE') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_CLIENTE
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_ENVIO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_ENVIO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_TICKET') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_TICKET
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_TICKET_DET') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_TICKET_DET
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_PROMOCION_APLICADA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_PROMOCION_APLICADA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_CAJA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_CAJA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_CAJA_TIPO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_CAJA_TIPO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_EMPLEADO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_EMPLEADO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_PROVINCIA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_PROVINCIA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_LOCALIDAD') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_LOCALIDAD
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_DIRECCION') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_DIRECCION
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_CONDICION_FISCAL') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_CONDICION_FISCAL
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_SUPERMERCADO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_SUPERMERCADO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_SUCURSAL') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_SUCURSAL
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_MARCA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_MARCA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_CATEGORIA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_CATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_PRODUCTO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_PRODUCTO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_SUBCATEGORIA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_SUBCATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_CATEGORIA_POR_SUBCATEGORIA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_CATEGORIA_POR_SUBCATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_PRODUCTO_POR_MARCA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_PRODUCTO_POR_MARCA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_PRODUCTO_POR_SUBCATEGORIA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_PRODUCTO_POR_SUBCATEGORIA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_PROMOCION') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_PROMOCION
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_PROMOCION_POR_PRODUCTO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_PROMOCION_POR_PRODUCTO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_REGLA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_REGLA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_TIPO_MP') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_TIPO_MP
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_MEDIO_PAGO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_MEDIO_PAGO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_TARJETA') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_TARJETA
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_DESCUENTO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_DESCUENTO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_DETALLE_PAGO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_DETALLE_PAGO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_PAGO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_PAGO
GO

IF OBJECT_ID('GESTIONANDING.MIGRAR_DESCUENTO_APLICADO') IS NOT NULL
    DROP PROCEDURE GESTIONANDING.MIGRAR_DESCUENTO_APLICADO
GO
-- Fin DROP Procedimientos


-- Inicio crear schema de la aplicación
IF EXISTS (SELECT SCHEMA_NAME
           FROM INFORMATION_SCHEMA.SCHEMATA
           WHERE SCHEMA_NAME = 'GESTIONANDING')
    DROP SCHEMA GESTIONANDING
GO

CREATE SCHEMA GESTIONANDING
GO
-- Fin crear schema de la aplicación


-- Inicio crear tablas

CREATE TABLE GESTIONANDING.CLIENTE
(
    CLIENTE_ID               INT           IDENTITY (1, 1) PRIMARY KEY,
    CLIENTE_NOMBRE           VARCHAR(50)   NULL,
    CLIENTE_APELLIDO         VARCHAR(50)   NULL,
    CLIENTE_DNI              VARCHAR(8)    NULL,
    CLIENTE_FECHA_REGISTRO   DATE          NULL,
    CLIENTE_TELEFONO         VARCHAR(13)   NULL,
    CLIENTE_MAIL             VARCHAR(100)  NULL, 
    CLIENTE_FECHA_NACIMIENTO DATE          NULL,
    CLIENTE_DIRECCION        INT           NOT NULL--(FK)
)
GO

CREATE TABLE GESTIONANDING.ENVIO 
(
    ENVIO_NRO               INT             IDENTITY (1,1) PRIMARY KEY,
    ENVIO_TICKET            BIGINT          NOT NULL, --(FK)
    ENVIO_FECHA_PROGRAMADA  DATE            NULL,
    ENVIO_HORA_INICIO       INT		        NULL,
    ENVIO_HORA_FIN          INT		        NULL,
    ENVIO_CLIENTE           INT             NOT NULL, --(FK)
    ENVIO_COSTO             DECIMAL(10,2)   NULL,
    ENVIO_ESTADO            VARCHAR(20)     NULL,
    ENVIO_FECHA_ENTREGA     DATETIME        NULL
)
GO

CREATE TABLE GESTIONANDING.TARJETA -- TOMI
(
    TARJETA_ID          INT     IDENTITY (1, 1) PRIMARY KEY,
    TARJETA_NUMERO      CHAR(9) NULL, 
    TARJETA_VENCIMIENTO DATE    NULL
)
GO

CREATE TABLE GESTIONANDING.DETALLE_PAGO
(
    DETPAG_ID           INT         IDENTITY (1,1) PRIMARY KEY,
    DETPAG_CLIE         INT         , --FK
    DETPAG_TARJETA      INT         NOT NULL, --FK
    DETPAG_CUOTAS       SMALLINT    NULL
)
GO

CREATE TABLE GESTIONANDING.PAGO
(
    PAGO_ID             INT             IDENTITY (1,1) PRIMARY KEY,
    PAGO_FECHA          DATE            NULL,
    PAGO_IMPORTE        DECIMAL(10,2)   NULL,
    PAGO_MEDIO_PAGO     INT             NOT NULL, --FK
    PAGO_TICKET         BIGINT          NOT NULL, --FK
    PAGO_DETALLE        INT             NULL, --FK
)
GO

CREATE TABLE GESTIONANDING.DESCUENTO_APLICADO
(
    DA_PAGO                 INT             NOT NULL, --(FK)
    DA_DESCUENTO            INT             NOT NULL, --(FK)
    DA_APLICADA_DESCUENTO   DECIMAL(10,2)   NULL,
    PRIMARY KEY (DA_PAGO, DA_DESCUENTO)
)
GO

CREATE TABLE GESTIONANDING.DESCUENTO
(
    DESCUENTO_CODIGO        INT             PRIMARY KEY,
    DESCUENTO_DESCRIPCION   VARCHAR(50)     NULL,
    DESCUENTO_MEDIO_PAGO    INT             NOT NULL, --FK
    DESCUENTO_FECHA_INICIO  DATE            NULL,
    DESCUENTO_FECHA_FIN     DATE            NULL,
    DESCUENTO_PORCENTAJE    SMALLINT        NULL,
    DESCUENTO_TOPE          DECIMAL(10,2)   NULL
)
GO

CREATE TABLE GESTIONANDING.MEDIO_PAGO
(
    MP_ID               INT         IDENTITY (1,1) PRIMARY KEY, 
    MP_TIPO             INT         NOT NULL, --FK
    MP_DESCRIPCION      VARCHAR(50) NULL   
)
GO

CREATE TABLE GESTIONANDING.TIPO_MP
(
    TIPO_MP_ID          INT             IDENTITY (1,1) PRIMARY KEY,
    TIPO_MP_DESCRIPCION VARCHAR(50)     NULL  
)
GO

CREATE TABLE GESTIONANDING.TICKET
(
    TICKET_ID                           BIGINT              IDENTITY(1,1) PRIMARY KEY,
    TICKET_NUMERO                       BIGINT              NOT NULL,
    TICKET_FECHA_HORA                   SMALLDATETIME       NULL,
    TICKET_CAJA_NUMERO                  SMALLINT            NOT NULL, --FK
    TICKET_SUCURSAL                     INT                 NOT NULL, --FK
    TICKET_EMPLEADO                     INT                 NOT NULL, --FK
    TICKET_TIPO_COMPROBANTE             CHAR(1)             NULL,
    TICKET_SUBTOTAL_PRODUCTOS           DECIMAL(10, 2)      NULL,
    TICKET_TOTAL_DESCUENTO_PROMOCIONES  DECIMAL(10, 2)      NULL,
    TICKET_TOTAL_DESCUENTO_APLICADO_MP  DECIMAL(10, 2)      NULL,
    TICKET_TOTAL_ENVIO                  DECIMAL(10, 2)      NULL,
    TICKET_TOTAL_TICKET                 DECIMAL(10,2)       NULL
)
GO

CREATE TABLE GESTIONANDING.TICKET_DET
(
    TICKET_DET_ID               INT             IDENTITY(1,1) PRIMARY KEY,
    TICKET_DET_PRODUCTO         BIGINT          NOT NULL, --(FK)
    TICKET_DET_TICKET           BIGINT          NOT NULL, --(FK)
    TICKET_DET_CANTIDAD         SMALLINT        NULL,
    TICKET_DET_PRECIO_UNITARIO  DECIMAL(10,2)   NULL,
    TICKET_DET_TOTAL            DECIMAL(10,2)   NULL
)
GO

CREATE TABLE GESTIONANDING.PROMOCION
(
    PROMO_CODIGO        SMALLINT    PRIMARY KEY,
    PROMO_DESCRIPCION   VARCHAR(50),
    PROMO_FECHA_INICIO  DATE,
    PROMO_FECHA_FIN     DATE
)
GO

CREATE TABLE GESTIONANDING.PROMOCION_APLICADA
(
    PA_PROMOCION            SMALLINT        NOT NULL, --(FK)
    PA_TICKET_DET           INT             NOT NULL, --FK
    PA_APLICADA_DESCUENTO   DECIMAL(10,2)   NULL,
    PRIMARY KEY (PA_PROMOCION, PA_TICKET_DET)
)
GO


CREATE TABLE GESTIONANDING.REGLA
(
    REGLA_ID                    INT         IDENTITY (1,1)  PRIMARY KEY,
    REGLA_DESCRIPCION           VARCHAR(50),
    REGLA_PORCENTAJE_DESCUENTO  SMALLINT,
    REGLA_CANTIDAD_PRODUCTOS    SMALLINT,
    REGLA_CANTIDAD_DESCUENTO    SMALLINT,
    REGLA_CANTIDAD_MAXIMA       SMALLINT,
    REGLA_FL_MARCA              BIT,
    REGLA_FL_PRODUCTO           BIT,
    REGLA_PROMOCION             SMALLINT--(FK)
)
GO

CREATE TABLE GESTIONANDING.PROMOCION_POR_PRODUCTO
(
    PXP_PROMOCION   SMALLINT, --(FK)
    PXP_PRODUCTO    BIGINT, --(FK)
    PRIMARY KEY (PXP_PROMOCION, PXP_PRODUCTO)
)
GO

CREATE TABLE GESTIONANDING.PRODUCTO
(
    PRODUCTO_COD            BIGINT          PRIMARY KEY,
    PRODUCTO_DESCRIPCION    VARCHAR(100)    NULL,       --SIEMPRE VA A ESTAR EN NULL PORQUE NO HAY DESCRIPCION REAL
    PRODUCTO_PRECIO         DECIMAL(10,2)   NULL
)
GO

CREATE TABLE GESTIONANDING.PRODUCTO_POR_SUBCATEGORIA
(
    PXS_PRODUCTO        BIGINT NOT NULL, --(FK)
    PXS_SUBCATEGORIA    BIGINT NOT NULL, --(FK)
    PRIMARY KEY (PXS_PRODUCTO, PXS_SUBCATEGORIA)
)
GO

CREATE TABLE GESTIONANDING.SUBCATEGORIA
(
    SUBCAT_ID           BIGINT      PRIMARY KEY,
    SUBCAT_DESCR        VARCHAR(50) NULL
)
GO

CREATE TABLE GESTIONANDING.CATEGORIA_POR_SUBCATEGORIA
(
    CXS_SUBCAT      BIGINT,     --(FK)
    CXS_CATEGORIA   BIGINT,     --(FK)
    PRIMARY KEY (CXS_SUBCAT, CXS_CATEGORIA)
)
GO

CREATE TABLE GESTIONANDING.CATEGORIA
(
    CAT_ID          BIGINT      PRIMARY KEY,
    CAT_DESCR       VARCHAR(50) NULL  
)
GO

CREATE TABLE GESTIONANDING.PRODUCTO_POR_MARCA
(
    PXM_MARCA           BIGINT      NOT NULL,   --FK
    PXM_PRODUCTO        BIGINT      NOT NULL    --FK
)
GO

CREATE TABLE GESTIONANDING.MARCA
(
    MARCA_COD           BIGINT      PRIMARY KEY, 
    MARCA_DESCRIPCION   VARCHAR(50) NULL  
)
GO

CREATE TABLE GESTIONANDING.CAJA
(
    CAJA_NUMERO     SMALLINT    NOT NULL,
    CAJA_SUCURSAL   INT         NOT NULL, --FK
    CAJA_TIPO       SMALLINT    NOT NULL, --FK
    PRIMARY KEY(CAJA_NUMERO, CAJA_SUCURSAL)
)
GO

CREATE TABLE GESTIONANDING.CAJA_TIPO
(
    CAJA_TIPO_ID            SMALLINT        IDENTITY (1,1) PRIMARY KEY,
    CAJA_TIPO_DESCRIPCION   VARCHAR(20)     NULL
)
GO

CREATE TABLE GESTIONANDING.SUCURSAL
(
    SUCURSAL_ID             INT         IDENTITY (1,1) PRIMARY KEY,
	SUCURSAL_NOMBRE			VARCHAR(30) NULL,
    SUCURSAL_DIRECCION      INT         NOT NULL,--FK
    SUCURSAL_SUPER          CHAR(13)    NOT NULL --FK    
)
GO

CREATE TABLE GESTIONANDING.SUPERMERCADO
(
    SUPER_CUIT                  CHAR(13)        PRIMARY KEY,
    SUPER_NOMBRE                VARCHAR(50)     NULL,
    SUPER_RAZON_SOC             VARCHAR(50)     NULL,
    SUPER_IIBB                  VARCHAR(50)     NULL,
    SUPER_DIRECCION             INT             NOT NULL,--FK
    SUPER_FECHA_INI_ACTIVIDAD   SMALLDATETIME   NULL,
    SUPER_CONDICION_FISCAL      INT             NOT NULL --FK
)
GO

CREATE TABLE GESTIONANDING.CONDICION_FISCAL
(
    CONFIS_ID               INT             IDENTITY (1,1) PRIMARY KEY,
    CONFIS_DESCRIPCION      VARCHAR(100)    NULL
)
GO

CREATE TABLE GESTIONANDING.DIRECCION
(
    DIRE_ID                 INT             IDENTITY (1,1) PRIMARY KEY,
    DIRE_DOMICILIO          VARCHAR(255)    NULL,
    DIRE_LOCALIDAD          SMALLINT        NOT NULL--FK 
)
GO

CREATE TABLE GESTIONANDING.LOCALIDAD
(
    LOCALIDAD_ID            SMALLINT        IDENTITY (1,1) PRIMARY KEY, 
    LOCALIDAD_NOMBRE        VARCHAR(50)     NULL,
    LOCALIDAD_PROVINCIA     SMALLINT        NOT NULL --FK
)
GO

CREATE TABLE GESTIONANDING.PROVINCIA
(
    PROV_ID         SMALLINT                IDENTITY (1,1) PRIMARY KEY, 
    PROV_NOMBRE     VARCHAR(50)             NULL
)
GO

CREATE TABLE GESTIONANDING.EMPLEADO
(
    EMPLEADO_LEGAJO             INT             IDENTITY (1,1) PRIMARY KEY,
    EMPLEADO_SUCURSAL           INT             NOT NULL, --FK
    EMPLEADO_NOMBRE             VARCHAR(50)     NULL,
    EMPLEADO_APELLIDO           VARCHAR(50)     NULL,
    EMPLEADO_DNI                CHAR(8)         NULL,
    EMPLEADO_FECHA_REGISTRO     SMALLDATETIME   NULL,
    EMPLEADO_TELEFONO           VARCHAR(13)     NULL,
    EMPLEADO_MAIL               VARCHAR(100)    NULL,
    EMPLEADO_FECHA_NACIMIENTO   DATE            NULL
)
GO

-- Fin crear tablas


-- Inicio crear FKs

ALTER TABLE GESTIONANDING.CLIENTE
    ADD CONSTRAINT FK_CLIENTE_DIRECCION FOREIGN KEY (cliente_direccion) REFERENCES GESTIONANDING.DIRECCION (dire_id)
GO

ALTER TABLE GESTIONANDING.ENVIO
    ADD CONSTRAINT FK_ENVIO_TICKET FOREIGN KEY (envio_ticket) REFERENCES GESTIONANDING.TICKET (TICKET_ID),
        CONSTRAINT FK_ENVIO_CLIENTE FOREIGN KEY (envio_cliente) REFERENCES GESTIONANDING.CLIENTE (cliente_id)
GO

ALTER TABLE GESTIONANDING.DETALLE_PAGO
    ADD CONSTRAINT FK_DETPAG_CLIENTE FOREIGN KEY (detpag_clie) REFERENCES GESTIONANDING.CLIENTE (cliente_id),
        CONSTRAINT FK_DETPAG_TARJETA FOREIGN KEY (detpag_tarjeta) REFERENCES GESTIONANDING.TARJETA (tarjeta_id)
GO

ALTER TABLE GESTIONANDING.PAGO
    ADD CONSTRAINT FK_PAGO_TICKET FOREIGN KEY (pago_ticket) REFERENCES GESTIONANDING.TICKET (TICKET_ID),
        CONSTRAINT FK_PAGO_DETALLE FOREIGN KEY (pago_detalle) REFERENCES GESTIONANDING.DETALLE_PAGO (detpag_id),
        CONSTRAINT FK_PAGO_MP FOREIGN KEY (pago_medio_pago) REFERENCES GESTIONANDING.MEDIO_PAGO (mp_id)
GO

ALTER TABLE GESTIONANDING.DESCUENTO_APLICADO
    ADD CONSTRAINT FK_DA_PAGO FOREIGN KEY (da_pago) REFERENCES GESTIONANDING.PAGO (pago_id),
        CONSTRAINT FK_DA_DESCUENTO FOREIGN KEY (da_descuento) REFERENCES GESTIONANDING.DESCUENTO (descuento_codigo)
GO

ALTER TABLE GESTIONANDING.DESCUENTO
    ADD CONSTRAINT FK_DESCUENTO_MP FOREIGN KEY (descuento_medio_pago) REFERENCES GESTIONANDING.MEDIO_PAGO (mp_id)
GO

ALTER TABLE GESTIONANDING.MEDIO_PAGO
    ADD CONSTRAINT FK_MP_TIPOMP FOREIGN KEY (mp_tipo) REFERENCES GESTIONANDING.TIPO_MP (tipo_mp_id)
GO

ALTER TABLE GESTIONANDING.TICKET
    ADD CONSTRAINT FK_TICKET_CAJA_SUCURSAL FOREIGN KEY (TICKET_CAJA_NUMERO, TICKET_SUCURSAL) REFERENCES GESTIONANDING.CAJA (caja_numero, CAJA_SUCURSAL),
        CONSTRAINT FK_TICKET_EMPLEADO FOREIGN KEY (ticket_empleado) REFERENCES GESTIONANDING.EMPLEADO (empleado_legajo)
GO

ALTER TABLE GESTIONANDING.TICKET_DET
    ADD CONSTRAINT FK_TDET_PRODUCTO FOREIGN KEY (ticket_det_producto) REFERENCES GESTIONANDING.PRODUCTO (producto_cod),
        CONSTRAINT FK_TDET_TICKET FOREIGN KEY (ticket_det_ticket) REFERENCES GESTIONANDING.TICKET (TICKET_ID)
GO

ALTER TABLE GESTIONANDING.PROMOCION_APLICADA
    ADD CONSTRAINT FK_PA_PROMOCION FOREIGN KEY (pa_promocion) REFERENCES GESTIONANDING.PROMOCION (promo_codigo),
		CONSTRAINT FK_PA_TDET FOREIGN KEY (PA_TICKET_DET) REFERENCES GESTIONANDING.TICKET_DET (TICKET_DET_ID)
GO

ALTER TABLE GESTIONANDING.REGLA
    ADD CONSTRAINT FK_REGLA_PROMOCION FOREIGN KEY (regla_promocion) REFERENCES GESTIONANDING.PROMOCION (promo_codigo)
GO

ALTER TABLE GESTIONANDING.PROMOCION_POR_PRODUCTO
    ADD CONSTRAINT FK_PXP_PROMOCION FOREIGN KEY (pxp_promocion) REFERENCES GESTIONANDING.PROMOCION (promo_codigo),
	    CONSTRAINT FK_PXP_PRODUCTO FOREIGN KEY (pxp_producto) REFERENCES GESTIONANDING.PRODUCTO (PRODUCTO_COD)
GO

ALTER TABLE GESTIONANDING.PRODUCTO_POR_SUBCATEGORIA 
    ADD CONSTRAINT FK_PXS_PRODUCTO FOREIGN KEY (PXS_PRODUCTO) REFERENCES GESTIONANDING.PRODUCTO (PRODUCTO_COD),
        CONSTRAINT FK_PXS_SUBCATEGORIA FOREIGN KEY (PXS_SUBCATEGORIA) REFERENCES GESTIONANDING.SUBCATEGORIA (SUBCAT_ID)
GO

ALTER TABLE GESTIONANDING.CATEGORIA_POR_SUBCATEGORIA
    ADD CONSTRAINT FK_CXS_SUBCATEGORIA FOREIGN KEY (CXS_SUBCAT) REFERENCES GESTIONANDING.SUBCATEGORIA (SUBCAT_ID),
        CONSTRAINT FK_CXS_CATEGORIA FOREIGN KEY (CXS_CATEGORIA) REFERENCES GESTIONANDING.CATEGORIA (CAT_ID)
GO 

ALTER TABLE GESTIONANDING.PRODUCTO_POR_MARCA
    ADD CONSTRAINT FK_PXM_MARCA FOREIGN KEY (PXM_MARCA) REFERENCES GESTIONANDING.MARCA (MARCA_COD),
        CONSTRAINT FK_PXM_PRODUCTO FOREIGN KEY (PXM_PRODUCTO) REFERENCES GESTIONANDING.PRODUCTO (PRODUCTO_COD)
GO

ALTER TABLE GESTIONANDING.CAJA
	ADD CONSTRAINT FK_CAJA_CAJATIPO FOREIGN KEY (caja_tipo) REFERENCES GESTIONANDING.CAJA_TIPO (caja_tipo_id),
		CONSTRAINT FK_CAJA_SUCURSAL FOREIGN KEY (caja_sucursal) REFERENCES GESTIONANDING.SUCURSAL (sucursal_id)
GO

ALTER TABLE GESTIONANDING.SUCURSAL
	ADD CONSTRAINT FK_SUCURSAL_DIRECCION FOREIGN KEY (sucursal_direccion) REFERENCES GESTIONANDING.DIRECCION (dire_id),
		CONSTRAINT FK_SUCURSAL_SUPERMERCADO FOREIGN KEY (sucursal_super) REFERENCES GESTIONANDING.SUPERMERCADO (super_cuit)
GO

ALTER TABLE GESTIONANDING.SUPERMERCADO
	ADD CONSTRAINT FK_SUPERMERCADO_DIRECCION FOREIGN KEY (super_direccion) REFERENCES GESTIONANDING.DIRECCION (dire_id),
		CONSTRAINT FK_SUPERMERCADO_CFISCAL FOREIGN KEY (super_condicion_fiscal) REFERENCES GESTIONANDING.CONDICION_FISCAL (confis_id)
GO

ALTER TABLE GESTIONANDING.DIRECCION
    ADD CONSTRAINT FK_DIRECCION FOREIGN KEY (DIRE_LOCALIDAD) REFERENCES GESTIONANDING.LOCALIDAD (LOCALIDAD_ID)
GO

ALTER TABLE GESTIONANDING.LOCALIDAD
    ADD CONSTRAINT FK_LOCALIDAD_PROVINCIA FOREIGN KEY (LOCALIDAD_PROVINCIA) REFERENCES GESTIONANDING.PROVINCIA (PROV_ID)
GO


ALTER TABLE GESTIONANDING.EMPLEADO
    ADD CONSTRAINT FK_EMPLEADO_SUCURSAL FOREIGN KEY (EMPLEADO_SUCURSAL) REFERENCES GESTIONANDING.SUCURSAL (SUCURSAL_ID)
GO




-- Fin crear FKs


-- Inicio crear Procedimientos
CREATE PROCEDURE GESTIONANDING.MIGRAR_CLIENTE
AS
BEGIN
    INSERT INTO GESTIONANDING.CLIENTE(  CLIENTE_NOMBRE, CLIENTE_APELLIDO, CLIENTE_DNI, CLIENTE_FECHA_REGISTRO,
                                        CLIENTE_TELEFONO, CLIENTE_MAIL, CLIENTE_FECHA_NACIMIENTO, CLIENTE_DIRECCION
                                        )
    SELECT DISTINCT 
    CLIENTE_NOMBRE, CLIENTE_APELLIDO, CLIENTE_DNI, CLIENTE_FECHA_REGISTRO,
    CLIENTE_TELEFONO, CLIENTE_MAIL, CLIENTE_FECHA_NACIMIENTO, d.DIRE_ID
    FROM 
        gd_esquema.Maestra m
        JOIN GESTIONANDING.PROVINCIA p
            ON m.CLIENTE_PROVINCIA = p.PROV_NOMBRE
        JOIN GESTIONANDING.LOCALIDAD l 
            ON l.LOCALIDAD_NOMBRE = m.CLIENTE_LOCALIDAD AND l.LOCALIDAD_PROVINCIA = p.PROV_ID
        JOIN GESTIONANDING.DIRECCION d 
            ON d.DIRE_DOMICILIO = m.CLIENTE_DOMICILIO AND d.DIRE_LOCALIDAD = l.LOCALIDAD_ID
    WHERE CLIENTE_NOMBRE IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_ENVIO
AS
BEGIN
    -- PK es ENVIO_NRO, autoincremental
    INSERT INTO GESTIONANDING.ENVIO (
        ENVIO_TICKET, --FK
        ENVIO_COSTO,
        ENVIO_FECHA_PROGRAMADA,
        ENVIO_HORA_INICIO,
        ENVIO_HORA_FIN,
        ENVIO_CLIENTE, --FK
        ENVIO_ESTADO,
        ENVIO_FECHA_ENTREGA
    )
    SELECT
        t.TICKET_ID,    --FK
        ENVIO_COSTO,
        ENVIO_FECHA_PROGRAMADA,
        ENVIO_HORA_INICIO,   
        ENVIO_HORA_FIN,
        c.CLIENTE_ID,   --FK
        ENVIO_ESTADO,
        ENVIO_FECHA_ENTREGA
    FROM gd_esquema.Maestra m
    JOIN GESTIONANDING.SUCURSAL s ON s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE
    JOIN GESTIONANDING.TICKET t ON 
        t.TICKET_NUMERO = m.TICKET_NUMERO
        AND t.TICKET_SUCURSAL = s.SUCURSAL_ID
        AND t.TICKET_TIPO_COMPROBANTE = m.TICKET_TIPO_COMPROBANTE
        AND t.TICKET_FECHA_HORA = m.TICKET_FECHA_HORA
        AND t.TICKET_SUBTOTAL_PRODUCTOS = m.TICKET_SUBTOTAL_PRODUCTOS
        AND t.TICKET_TOTAL_DESCUENTO_PROMOCIONES = m.TICKET_TOTAL_DESCUENTO_APLICADO
        AND t.TICKET_TOTAL_DESCUENTO_APLICADO_MP = m.TICKET_TOTAL_DESCUENTO_APLICADO_MP
        AND t.TICKET_TOTAL_ENVIO = m.TICKET_TOTAL_ENVIO
        AND t.TICKET_TOTAL_TICKET = m.TICKET_TOTAL_TICKET
    JOIN GESTIONANDING.CLIENTE c ON
        c.CLIENTE_DNI = m.CLIENTE_DNI
        AND c.CLIENTE_NOMBRE = m.CLIENTE_NOMBRE
        AND c.CLIENTE_APELLIDO = m.CLIENTE_APELLIDO
    WHERE ENVIO_COSTO IS NOT NULL 
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_TICKET
AS
BEGIN
    --PK AUTOINCREMENTAL INT TICKET_COD
    INSERT INTO GESTIONANDING.TICKET (
        TICKET_NUMERO,            
        TICKET_FECHA_HORA,                 
        TICKET_CAJA_NUMERO, --FK --PK DE CAJA
        TICKET_SUCURSAL,    --FK --PK DE CAJA                       
        TICKET_EMPLEADO, --FK                  
        TICKET_TIPO_COMPROBANTE,           
        TICKET_SUBTOTAL_PRODUCTOS,         
        TICKET_TOTAL_DESCUENTO_PROMOCIONES,
        TICKET_TOTAL_DESCUENTO_APLICADO_MP,
        TICKET_TOTAL_ENVIO,
        TICKET_TOTAL_TICKET              
    )
    SELECT distinct
        TICKET_NUMERO, 
        TICKET_FECHA_HORA,
        c.CAJA_NUMERO, --FK     --PK CAJA
        c.CAJA_SUCURSAL, --FK   --PK CAJA
        e.EMPLEADO_LEGAJO,--FK
        TICKET_TIPO_COMPROBANTE,
        TICKET_SUBTOTAL_PRODUCTOS,
        TICKET_TOTAL_DESCUENTO_APLICADO,
        TICKET_TOTAL_DESCUENTO_APLICADO_MP,
        TICKET_TOTAL_ENVIO,
        TICKET_TOTAL_TICKET
    FROM gd_esquema.Maestra m
    JOIN GESTIONANDING.SUCURSAL s ON s.SUCURSAL_NOMBRE=m.SUCURSAL_NOMBRE
    JOIN GESTIONANDING.CAJA c 
        ON  c.CAJA_NUMERO = m.CAJA_NUMERO
        AND s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE
        AND c.CAJA_SUCURSAL = s.SUCURSAL_ID
    JOIN GESTIONANDING.EMPLEADO e ON 
        e.EMPLEADO_DNI = m.EMPLEADO_DNI 
        AND e.EMPLEADO_NOMBRE = m.EMPLEADO_NOMBRE
        AND e.EMPLEADO_APELLIDO = m.EMPLEADO_APELLIDO
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_TICKET_DET
AS
BEGIN
    --PK TICKET_DET_ID autoincremental
    INSERT INTO GESTIONANDING.TICKET_DET(
        TICKET_DET_PRODUCTO,   -- FK
        TICKET_DET_TICKET,     -- FK
        TICKET_DET_CANTIDAD,
        TICKET_DET_PRECIO_UNITARIO,
        TICKET_DET_TOTAL        
    )
    SELECT distinct
        p.PRODUCTO_COD,
        t.TICKET_ID,
        TICKET_DET_CANTIDAD,
        TICKET_DET_PRECIO,
        TICKET_DET_TOTAL
    FROM gd_esquema.Maestra m
    JOIN GESTIONANDING.SUCURSAL s ON s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE
    JOIN GESTIONANDING.TICKET t ON 
        t.TICKET_NUMERO = m.TICKET_NUMERO
        AND t.TICKET_SUCURSAL = s.SUCURSAL_ID
        AND t.TICKET_TIPO_COMPROBANTE = m.TICKET_TIPO_COMPROBANTE
        AND t.TICKET_FECHA_HORA = m.TICKET_FECHA_HORA
        AND t.TICKET_SUBTOTAL_PRODUCTOS = m.TICKET_SUBTOTAL_PRODUCTOS
        AND t.TICKET_TOTAL_DESCUENTO_PROMOCIONES = m.TICKET_TOTAL_DESCUENTO_APLICADO
        AND t.TICKET_TOTAL_DESCUENTO_APLICADO_MP = m.TICKET_TOTAL_DESCUENTO_APLICADO_MP
        AND t.TICKET_TOTAL_ENVIO = m.TICKET_TOTAL_ENVIO
        AND t.TICKET_TOTAL_TICKET = m.TICKET_TOTAL_TICKET
    JOIN GESTIONANDING.PRODUCTO p ON p.PRODUCTO_COD=CAST(SUBSTRING(m.PRODUCTO_NOMBRE, CHARINDEX(':', m.PRODUCTO_NOMBRE) + 1, LEN(m.PRODUCTO_NOMBRE)) AS BIGINT)
    where CAJA_NUMERO is not NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_PROMOCION_APLICADA
AS
BEGIN
    INSERT INTO GESTIONANDING.PROMOCION_APLICADA(
        PA_PROMOCION,  --FK a PROMOCION       
        PA_TICKET_DET, --FK a detalle  
        PA_APLICADA_DESCUENTO
    )
    SELECT distinct
        p.PROMO_CODIGO, --FK
        td.TICKET_DET_ID, --FK
        PROMO_APLICADA_DESCUENTO
    FROM gd_esquema.Maestra m
    JOIN GESTIONANDING.PROMOCION p ON p.PROMO_CODIGO=m.PROMO_CODIGO
    JOIN GESTIONANDING.SUCURSAL s ON s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE
    JOIN GESTIONANDING.TICKET t ON 
        t.TICKET_NUMERO = m.TICKET_NUMERO
        AND t.TICKET_SUCURSAL = s.SUCURSAL_ID
        AND t.TICKET_TIPO_COMPROBANTE = m.TICKET_TIPO_COMPROBANTE
        AND t.TICKET_FECHA_HORA = m.TICKET_FECHA_HORA
        AND t.TICKET_SUBTOTAL_PRODUCTOS = m.TICKET_SUBTOTAL_PRODUCTOS
        AND t.TICKET_TOTAL_DESCUENTO_PROMOCIONES = m.TICKET_TOTAL_DESCUENTO_APLICADO
        AND t.TICKET_TOTAL_DESCUENTO_APLICADO_MP = m.TICKET_TOTAL_DESCUENTO_APLICADO_MP
        AND t.TICKET_TOTAL_ENVIO = m.TICKET_TOTAL_ENVIO
        AND t.TICKET_TOTAL_TICKET = m.TICKET_TOTAL_TICKET
    JOIN GESTIONANDING.TICKET_DET td ON
        td.TICKET_DET_PRODUCTO=CAST(SUBSTRING(m.PRODUCTO_NOMBRE, CHARINDEX(':', m.PRODUCTO_NOMBRE) + 1, LEN(m.PRODUCTO_NOMBRE)) AS BIGINT)
        AND td.TICKET_DET_TICKET=t.TICKET_ID
        AND td.TICKET_DET_CANTIDAD=m.TICKET_DET_CANTIDAD
        AND td.TICKET_DET_PRECIO_UNITARIO=m.TICKET_DET_PRECIO
        AND td.TICKET_DET_TOTAL=m.TICKET_DET_TOTAL
    WHERE m.PROMO_CODIGO is not null
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_CAJA
AS
BEGIN
    INSERT INTO GESTIONANDING.CAJA(
        CAJA_NUMERO,        --PK
        CAJA_SUCURSAL, --FK --PK
        CAJA_TIPO --FK
    )
    SELECT DISTINCT
        CAJA_NUMERO,
        s.SUCURSAL_ID, --FK
        ct.CAJA_TIPO_ID --FK
    FROM gd_esquema.Maestra m
    JOIN GESTIONANDING.CAJA_TIPO ct 
        ON ct.CAJA_TIPO_DESCRIPCION=SUBSTRING( -- formateo del tipo de caja
                                        m.CAJA_TIPO, 
                                        CHARINDEX(' ', m.CAJA_TIPO, CHARINDEX(' ', m.CAJA_TIPO) + 1) + 1, 
                                        LEN(m.CAJA_TIPO)
                                    )
    JOIN GESTIONANDING.SUCURSAL s 
        ON s.SUCURSAL_NOMBRE=m.SUCURSAL_NOMBRE 
    WHERE
        CAJA_NUMERO IS NOT NULL AND
        CAJA_TIPO IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_CAJA_TIPO
AS
BEGIN
    -- CAJA_TIPO_ID es PK, autoincremental
    INSERT INTO GESTIONANDING.CAJA_TIPO(CAJA_TIPO_DESCRIPCION)
    SELECT DISTINCT 
        --Quito el "CAJA TIPO RAPIDA" y me quedo con "RAPIDA"
        SUBSTRING( 
            m.CAJA_TIPO, 
            CHARINDEX(' ', m.CAJA_TIPO, CHARINDEX(' ', m.CAJA_TIPO) + 1) + 1, 
            LEN(m.CAJA_TIPO)
        )
    FROM gd_esquema.Maestra m
    WHERE m.CAJA_TIPO IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_EMPLEADO
AS
BEGIN
    --EMPLEADO_LEGAJO ES PK, autoincremental
    INSERT INTO GESTIONANDING.EMPLEADO(          
        EMPLEADO_SUCURSAL,  --FK      
        EMPLEADO_NOMBRE,          
        EMPLEADO_APELLIDO,        
        EMPLEADO_DNI,             
        EMPLEADO_FECHA_REGISTRO,  
        EMPLEADO_TELEFONO,        
        EMPLEADO_MAIL,            
        EMPLEADO_FECHA_NACIMIENTO
    )
    SELECT DISTINCT
        s.SUCURSAL_ID, --FK
        EMPLEADO_NOMBRE,
        EMPLEADO_APELLIDO,
        EMPLEADO_DNI,
        EMPLEADO_FECHA_REGISTRO,
        EMPLEADO_TELEFONO,
        EMPLEADO_MAIL,
        EMPLEADO_FECHA_NACIMIENTO
    FROM gd_esquema.Maestra m
    JOIN GESTIONANDING.SUCURSAL s ON m.SUCURSAL_NOMBRE = s.SUCURSAL_NOMBRE
    WHERE EMPLEADO_NOMBRE IS NOT NULL
END 
GO


CREATE PROCEDURE GESTIONANDING.MIGRAR_PROVINCIA
AS
BEGIN
	INSERT INTO GESTIONANDING.PROVINCIA (PROV_NOMBRE)
	SELECT super_provincia
	FROM gd_esquema.maestra
	WHERE SUPER_PROVINCIA IS NOT NULL
	UNION
	SELECT sucursal_provincia
	FROM gd_esquema.maestra
	WHERE sucursal_provincia IS NOT NULL
	UNION
	SELECT cliente_provincia
	FROM gd_esquema.maestra
	WHERE cliente_provincia IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_LOCALIDAD
AS
BEGIN
	INSERT INTO GESTIONANDING.LOCALIDAD (LOCALIDAD_NOMBRE, LOCALIDAD_PROVINCIA)
	SELECT super_localidad ,
       PROV_ID
	FROM gd_esquema.maestra m
	JOIN gestionanding.PROVINCIA p ON p.PROV_NOMBRE = m.SUPER_PROVINCIA
	UNION
	SELECT SUCURSAL_LOCALIDAD ,
       PROV_ID
	FROM gd_esquema.maestra m
	JOIN gestionanding.PROVINCIA p ON p.PROV_NOMBRE = m.SUCURSAL_PROVINCIA
	UNION
	SELECT CLIENTE_LOCALIDAD ,
       PROV_ID
	FROM gd_esquema.maestra m
	JOIN gestionanding.PROVINCIA p ON p.PROV_NOMBRE = m.CLIENTE_PROVINCIA
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_DIRECCION
AS
BEGIN
	INSERT INTO GESTIONANDING.DIRECCION (DIRE_DOMICILIO, DIRE_LOCALIDAD)
	SELECT super_domicilio ,
       l.LOCALIDAD_ID
	FROM gd_esquema.maestra m
	JOIN gestionanding.provincia p ON m.super_provincia = p.PROV_NOMBRE
	JOIN gestionanding.LOCALIDAD l ON p.PROV_ID = l.LOCALIDAD_PROVINCIA
	AND m.SUPER_LOCALIDAD = l.LOCALIDAD_NOMBRE
	UNION
	SELECT sucursal_direccion ,
       l.LOCALIDAD_ID
	FROM gd_esquema.maestra m
	JOIN gestionanding.provincia p ON m.sucursal_provincia = p.PROV_NOMBRE
	JOIN gestionanding.LOCALIDAD l ON p.PROV_ID = l.LOCALIDAD_PROVINCIA
	AND m.sucursal_LOCALIDAD = l.LOCALIDAD_NOMBRE
	UNION
	SELECT CLIENTE_DOMICILIO ,
       l.LOCALIDAD_ID
	FROM gd_esquema.maestra m
	JOIN gestionanding.provincia p ON m.cliente_provincia = p.PROV_NOMBRE
	JOIN gestionanding.LOCALIDAD l ON p.PROV_ID = l.LOCALIDAD_PROVINCIA
	AND m.cliente_LOCALIDAD = l.LOCALIDAD_NOMBRE
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_CONDICION_FISCAL
AS
BEGIN
	INSERT INTO GESTIONANDING.CONDICION_FISCAL(CONFIS_DESCRIPCION)
	SELECT DISTINCT super_condicion_fiscal
	FROM gd_esquema.maestra
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_SUPERMERCADO
AS
BEGIN
	INSERT INTO GESTIONANDING.SUPERMERCADO
	SELECT DISTINCT SUPER_CUIT,
                SUPER_NOMBRE ,
                SUPER_RAZON_SOC ,
                SUPER_IIBB ,
                d.DIRE_ID ,
                SUPER_FECHA_INI_ACTIVIDAD ,
                cf.CONFIS_ID
	FROM gd_esquema.Maestra m
	JOIN gestionanding.CONDICION_FISCAL cf ON m.SUPER_CONDICION_FISCAL = cf.CONFIS_DESCRIPCION
	JOIN gestionanding.PROVINCIA p ON m.SUPER_PROVINCIA = p.PROV_NOMBRE
	JOIN gestionanding.LOCALIDAD l ON m.SUPER_LOCALIDAD = l.LOCALIDAD_NOMBRE
	AND p.PROV_ID = l.LOCALIDAD_PROVINCIA
	JOIN gestionanding.DIRECCION d ON m.SUPER_DOMICILIO = d.DIRE_DOMICILIO
	AND l.LOCALIDAD_ID = d.DIRE_LOCALIDAD
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_SUCURSAL
AS
BEGIN
	INSERT INTO GESTIONANDING.SUCURSAL (SUCURSAL_NOMBRE, SUCURSAL_DIRECCION, SUCURSAL_SUPER)
	SELECT DISTINCT SUCURSAL_NOMBRE,
                d.DIRE_ID,
                s.SUPER_CUIT
	FROM gd_esquema.Maestra m
	JOIN gestionanding.SUPERMERCADO s ON m.SUPER_CUIT = s.SUPER_CUIT
	JOIN gestionanding.PROVINCIA p ON m.SUCURSAL_PROVINCIA = p.PROV_NOMBRE
	JOIN gestionanding.LOCALIDAD l ON m.SUCURSAL_LOCALIDAD = l.LOCALIDAD_NOMBRE
	AND p.PROV_ID = l.LOCALIDAD_PROVINCIA
	JOIN gestionanding.DIRECCION d ON m.SUCURSAL_DIRECCION = d.DIRE_DOMICILIO
	AND l.LOCALIDAD_ID = d.DIRE_LOCALIDAD
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_MARCA
AS
BEGIN
    INSERT INTO GESTIONANDING.MARCA (MARCA_COD, MARCA_DESCRIPCION)
    SELECT DISTINCT SUBSTRING(PRODUCTO_MARCA, 9, 11), 
                PRODUCTO_MARCA
    FROM gd_esquema.Maestra AS m
    WHERE PRODUCTO_MARCA IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_CATEGORIA
AS
BEGIN
    INSERT INTO GESTIONANDING.CATEGORIA (CAT_ID, CAT_DESCR)
    SELECT DISTINCT SUBSTRING(PRODUCTO_CATEGORIA, 13, 7), 
                PRODUCTO_CATEGORIA
    FROM gd_esquema.Maestra AS m
    WHERE PRODUCTO_CATEGORIA IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_PRODUCTO
AS
BEGIN
    INSERT INTO GESTIONANDING.PRODUCTO (PRODUCTO_COD, PRODUCTO_DESCRIPCION, PRODUCTO_PRECIO)
    SELECT DISTINCT SUBSTRING(PRODUCTO_NOMBRE,8, 12),
        PRODUCTO_DESCRIPCION,
        (
			SELECT TOP 1 PRODUCTO_PRECIO
			FROM [gd_esquema].[Maestra]
			WHERE PRODUCTO_NOMBRE = M.PRODUCTO_NOMBRE
			AND PRODUCTO_DESCRIPCION = M.PRODUCTO_DESCRIPCION
			ORDER BY TICKET_FECHA_HORA DESC
		)
    FROM [gd_esquema].[Maestra] AS M
    WHERE PRODUCTO_NOMBRE IS NOT NULL
    GROUP BY PRODUCTO_NOMBRE, PRODUCTO_DESCRIPCION
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_SUBCATEGORIA
AS
BEGIN
    INSERT INTO GESTIONANDING.SUBCATEGORIA (SUBCAT_ID, SUBCAT_DESCR)
    SELECT DISTINCT SUBSTRING(PRODUCTO_SUB_CATEGORIA, 16, 8),
	    PRODUCTO_SUB_CATEGORIA
    FROM [gd_esquema].[Maestra]
    WHERE PRODUCTO_SUB_CATEGORIA IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_CATEGORIA_POR_SUBCATEGORIA
AS
BEGIN
    INSERT INTO GESTIONANDING.CATEGORIA_POR_SUBCATEGORIA (CXS_SUBCAT, CXS_CATEGORIA)
    SELECT DISTINCT SUBSTRING(PRODUCTO_SUB_CATEGORIA, 16, 8),
                    SUBSTRING(PRODUCTO_CATEGORIA, 13, 7)
    FROM [gd_esquema].[Maestra]
    WHERE PRODUCTO_SUB_CATEGORIA IS NOT NULL
	        AND PRODUCTO_CATEGORIA IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_PRODUCTO_POR_MARCA
AS
BEGIN
    INSERT INTO GESTIONANDING.PRODUCTO_POR_MARCA (PXM_MARCA, PXM_PRODUCTO)
    SELECT DISTINCT SUBSTRING(PRODUCTO_MARCA, 9, 11),
                    SUBSTRING(PRODUCTO_NOMBRE,8, 12)
    FROM [gd_esquema].[Maestra]
    WHERE PRODUCTO_NOMBRE IS NOT NULL
		AND PRODUCTO_MARCA IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_PRODUCTO_POR_SUBCATEGORIA
AS
BEGIN
    INSERT INTO GESTIONANDING.PRODUCTO_POR_SUBCATEGORIA (PXS_PRODUCTO, PXS_SUBCATEGORIA)
    SELECT DISTINCT SUBSTRING(PRODUCTO_NOMBRE,8, 12),
                    SUBSTRING(PRODUCTO_SUB_CATEGORIA, 16, 8)
    FROM [gd_esquema].[Maestra]
    WHERE PRODUCTO_NOMBRE IS NOT NULL
		AND PRODUCTO_SUB_CATEGORIA IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_PROMOCION
AS
BEGIN
    INSERT INTO GESTIONANDING.PROMOCION (PROMO_CODIGO, PROMO_DESCRIPCION, PROMO_FECHA_INICIO, PROMO_FECHA_FIN)
    SELECT DISTINCT PROMO_CODIGO,
        PROMOCION_DESCRIPCION,
        PROMOCION_FECHA_INICIO,
        PROMOCION_FECHA_FIN
    FROM [gd_esquema].[Maestra]
    WHERE PROMO_CODIGO IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_PROMOCION_POR_PRODUCTO
AS
BEGIN
    INSERT INTO GESTIONANDING.PROMOCION_POR_PRODUCTO (PXP_PROMOCION, PXP_PRODUCTO)
    SELECT DISTINCT PROMO_CODIGO,
	    SUBSTRING(PRODUCTO_NOMBRE,8, 12)
    FROM [gd_esquema].[Maestra]
    WHERE PROMO_CODIGO IS NOT NULL
	AND PRODUCTO_NOMBRE IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_REGLA
AS
BEGIN
    INSERT INTO GESTIONANDING.REGLA (REGLA_DESCRIPCION,
        REGLA_PORCENTAJE_DESCUENTO,
        REGLA_CANTIDAD_PRODUCTOS,
        REGLA_CANTIDAD_DESCUENTO,
        REGLA_CANTIDAD_MAXIMA,
        REGLA_FL_MARCA,
        REGLA_FL_PRODUCTO,
        REGLA_PROMOCION)
    SELECT DISTINCT [REGLA_DESCRIPCION],
		[REGLA_DESCUENTO_APLICABLE_PROD],
		[REGLA_CANT_APLICABLE_REGLA],
		[REGLA_CANT_APLICA_DESCUENTO],
		[REGLA_CANT_MAX_PROD],
		[REGLA_APLICA_MISMA_MARCA],
		[REGLA_APLICA_MISMO_PROD],
		[PROMO_CODIGO]
    FROM [gd_esquema].[Maestra]
    WHERE PROMO_CODIGO IS NOT NULL	
		  AND REGLA_DESCRIPCION IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_TIPO_MP
AS
BEGIN
    INSERT INTO GESTIONANDING.TIPO_MP (TIPO_MP_DESCRIPCION)
    SELECT DISTINCT PAGO_TIPO_MEDIO_PAGO
    FROM gd_esquema.Maestra
    WHERE PAGO_TIPO_MEDIO_PAGO IS NOT NULL;
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_MEDIO_PAGO
AS
BEGIN
    INSERT INTO GESTIONANDING.MEDIO_PAGO (MP_TIPO, MP_DESCRIPCION)
    SELECT DISTINCT t.TIPO_MP_ID, PAGO_MEDIO_PAGO
    FROM 
        gd_esquema.Maestra m
        JOIN GESTIONANDING.TIPO_MP t ON m.PAGO_TIPO_MEDIO_PAGO = t.TIPO_MP_DESCRIPCION
    WHERE 
        m.PAGO_MEDIO_PAGO           IS NOT NULL
        AND m.PAGO_TIPO_MEDIO_PAGO  IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_TARJETA
AS
BEGIN
    INSERT INTO TARJETA (TARJETA_NUMERO, TARJETA_VENCIMIENTO)
    SELECT DISTINCT PAGO_TARJETA_NRO, PAGO_TARJETA_FECHA_VENC 
    FROM gd_esquema.Maestra
    WHERE 
        PAGO_TARJETA_NRO            IS NOT NULL 
        AND PAGO_TARJETA_FECHA_VENC IS NOT NULL
END
GO


CREATE PROCEDURE GESTIONANDING.MIGRAR_DESCUENTO
AS
BEGIN
    INSERT INTO DESCUENTO ( DESCUENTO_CODIGO, DESCUENTO_DESCRIPCION, DESCUENTO_MEDIO_PAGO,
                            DESCUENTO_FECHA_INICIO, DESCUENTO_FECHA_FIN, DESCUENTO_PORCENTAJE, 
                            DESCUENTO_TOPE)
    SELECT DISTINCT DESCUENTO_CODIGO, DESCUENTO_DESCRIPCION, mp.MP_ID,
                    DESCUENTO_FECHA_INICIO, DESCUENTO_FECHA_FIN, DESCUENTO_PORCENTAJE_DESC, 
                    DESCUENTO_TOPE
    FROM 
        gd_esquema.Maestra ma
        JOIN GESTIONANDING.MEDIO_PAGO mp ON ma.PAGO_MEDIO_PAGO = mp.MP_DESCRIPCION
    WHERE
        DESCUENTO_CODIGO                IS NOT NULL
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_DETALLE_PAGO
AS
BEGIN
    INSERT INTO GESTIONANDING.DETALLE_PAGO (DETPAG_CLIE, DETPAG_TARJETA, DETPAG_CUOTAS)
    SELECT DISTINCT
        c.CLIENTE_ID AS CLIENTE_ID,
        ta.TARJETA_ID AS TARJETA_ID, 
        m1.PAGO_TARJETA_CUOTAS AS PAGO_TARJETA_CUOTAS
    FROM 
        gd_esquema.Maestra m1
        JOIN GESTIONANDING.TARJETA ta 
            ON	ta.TARJETA_NUMERO = m1.PAGO_TARJETA_NRO 
            AND ta.TARJETA_VENCIMIENTO = m1.PAGO_TARJETA_FECHA_VENC
        LEFT JOIN gd_esquema.Maestra m2 
            ON	m1.TICKET_NUMERO = m2.TICKET_NUMERO
            AND m1.TICKET_FECHA_HORA = m2.TICKET_FECHA_HORA
            AND m1.TICKET_TIPO_COMPROBANTE = m2.TICKET_TIPO_COMPROBANTE
            AND m2.CLIENTE_DNI IS NOT NULL
        LEFT JOIN GESTIONANDING.CLIENTE c 
            ON	m2.CLIENTE_DNI = c.CLIENTE_DNI
END
GO


CREATE PROCEDURE GESTIONANDING.MIGRAR_PAGO
AS
BEGIN
    INSERT INTO GESTIONANDING.PAGO (PAGO_FECHA, PAGO_IMPORTE, PAGO_MEDIO_PAGO, PAGO_TICKET, PAGO_DETALLE)
    SELECT DISTINCT
        m1.PAGO_FECHA,
        m1.PAGO_IMPORTE,
        mp.MP_ID,
        t.TICKET_ID,
        dp.DETPAG_ID
    FROM 
        gd_esquema.Maestra m1
        -- DATOS MEDIO DE PAGO
        JOIN GESTIONANDING.TIPO_MP tmp
            ON tmp.TIPO_MP_DESCRIPCION = m1.PAGO_TIPO_MEDIO_PAGO
        JOIN GESTIONANDING.MEDIO_PAGO mp
            ON	mp.MP_DESCRIPCION = m1.PAGO_MEDIO_PAGO
                AND mp.MP_TIPO = tmp.TIPO_MP_ID
        --DATOS TICKETS
        JOIN GESTIONANDING.SUCURSAL s ON s.SUCURSAL_NOMBRE = m1.SUCURSAL_NOMBRE
        JOIN GESTIONANDING.TICKET t ON 
            t.TICKET_NUMERO = m1.TICKET_NUMERO
            AND t.TICKET_SUCURSAL = s.SUCURSAL_ID
            AND t.TICKET_TIPO_COMPROBANTE = m1.TICKET_TIPO_COMPROBANTE
            AND t.TICKET_FECHA_HORA = m1.TICKET_FECHA_HORA
            AND t.TICKET_SUBTOTAL_PRODUCTOS = m1.TICKET_SUBTOTAL_PRODUCTOS
            AND t.TICKET_TOTAL_DESCUENTO_PROMOCIONES = m1.TICKET_TOTAL_DESCUENTO_APLICADO
            AND t.TICKET_TOTAL_DESCUENTO_APLICADO_MP = m1.TICKET_TOTAL_DESCUENTO_APLICADO_MP
            AND t.TICKET_TOTAL_ENVIO = m1.TICKET_TOTAL_ENVIO
            AND t.TICKET_TOTAL_TICKET = m1.TICKET_TOTAL_TICKET
        -- DATOS DETALLE DE PAGO
        LEFT JOIN GESTIONANDING.TARJETA ta
            ON	ta.TARJETA_NUMERO = m1.PAGO_TARJETA_NRO 
                AND ta.TARJETA_VENCIMIENTO = m1.PAGO_TARJETA_FECHA_VENC
        LEFT JOIN GESTIONANDING.DETALLE_PAGO dp
            ON dp.DETPAG_TARJETA = ta.TARJETA_ID
    WHERE NOT (m1.PAGO_MEDIO_PAGO IS NULL AND TA.TARJETA_ID IS NULL)
END
GO

CREATE PROCEDURE GESTIONANDING.MIGRAR_DESCUENTO_APLICADO
AS
BEGIN
    INSERT INTO DESCUENTO_APLICADO (DA_PAGO, DA_DESCUENTO, DA_APLICADA_DESCUENTO)
    SELECT p.PAGO_ID, d.DESCUENTO_CODIGO, m.PAGO_DESCUENTO_APLICADO
    FROM gd_esquema.Maestra m
    JOIN GESTIONANDING.SUCURSAL s ON s.SUCURSAL_NOMBRE = m.SUCURSAL_NOMBRE
    JOIN GESTIONANDING.TICKET t ON 
        t.TICKET_NUMERO = m.TICKET_NUMERO
        AND t.TICKET_SUCURSAL = s.SUCURSAL_ID
        AND t.TICKET_TIPO_COMPROBANTE = m.TICKET_TIPO_COMPROBANTE
        AND t.TICKET_FECHA_HORA = m.TICKET_FECHA_HORA
        AND t.TICKET_SUBTOTAL_PRODUCTOS = m.TICKET_SUBTOTAL_PRODUCTOS
        AND t.TICKET_TOTAL_DESCUENTO_PROMOCIONES = m.TICKET_TOTAL_DESCUENTO_APLICADO
        AND t.TICKET_TOTAL_DESCUENTO_APLICADO_MP = m.TICKET_TOTAL_DESCUENTO_APLICADO_MP
        AND t.TICKET_TOTAL_ENVIO = m.TICKET_TOTAL_ENVIO
        AND t.TICKET_TOTAL_TICKET = m.TICKET_TOTAL_TICKET
        JOIN GESTIONANDING.PAGO p
            ON p.PAGO_TICKET = t.TICKET_ID
        JOIN GESTIONANDING.DESCUENTO d
            ON d.DESCUENTO_CODIGO = m.DESCUENTO_CODIGO
END
GO

-- Fin crear Procedimientos


-- Inicio Invocaciones de procedimientos
--* Migración de tablas paramétricas sin dependencias
EXEC GESTIONANDING.MIGRAR_TARJETA
EXEC GESTIONANDING.MIGRAR_TIPO_MP;
EXEC GESTIONANDING.MIGRAR_CAJA_TIPO;
EXEC GESTIONANDING.MIGRAR_CONDICION_FISCAL;
EXEC GESTIONANDING.MIGRAR_PROVINCIA;
EXEC GESTIONANDING.MIGRAR_PROMOCION;
EXEC GESTIONANDING.MIGRAR_PRODUCTO;
EXEC GESTIONANDING.MIGRAR_MARCA;
EXEC GESTIONANDING.MIGRAR_CATEGORIA;
EXEC GESTIONANDING.MIGRAR_SUBCATEGORIA;


--* Migración de tablas con dependencias
EXEC GESTIONANDING.MIGRAR_LOCALIDAD;
EXEC GESTIONANDING.MIGRAR_DIRECCION;
EXEC GESTIONANDING.MIGRAR_CLIENTE;
EXEC GESTIONANDING.MIGRAR_DETALLE_PAGO;
EXEC GESTIONANDING.MIGRAR_SUPERMERCADO;
EXEC GESTIONANDING.MIGRAR_SUCURSAL;
EXEC GESTIONANDING.MIGRAR_EMPLEADO;
EXEC GESTIONANDING.MIGRAR_CAJA;
EXEC GESTIONANDING.MIGRAR_TICKET;
EXEC GESTIONANDING.MIGRAR_ENVIO;
EXEC GESTIONANDING.MIGRAR_MEDIO_PAGO;
EXEC GESTIONANDING.MIGRAR_PAGO;
EXEC GESTIONANDING.MIGRAR_DESCUENTO;
EXEC GESTIONANDING.MIGRAR_TICKET_DET;
EXEC GESTIONANDING.MIGRAR_PROMOCION_POR_PRODUCTO;
EXEC GESTIONANDING.MIGRAR_REGLA;



--* Migración de tablas intermedias
EXEC GESTIONANDING.MIGRAR_PROMOCION_APLICADA;
EXEC GESTIONANDING.MIGRAR_DESCUENTO_APLICADO;
EXEC GESTIONANDING.MIGRAR_CATEGORIA_POR_SUBCATEGORIA;
EXEC GESTIONANDING.MIGRAR_PRODUCTO_POR_MARCA;
EXEC GESTIONANDING.MIGRAR_PRODUCTO_POR_SUBCATEGORIA;

-- Fin Invocaciones de procedimientos